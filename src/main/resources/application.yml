logging:
  level:
    org.hibernate.envers.boot: OFF

spring:
  jpa:
    database: mysql
    #    ??? ??? ?? ??
    open-in-view: false
    #    DB ?? ??(??? = org.hibernate.dialect.MySQLDialect)
    #    database-platform: org.hibernate.dialect.MySQLDialect
    properties:
      #      ?? ?? ID ?? ?? ??
      hibernate.id.new_generator_mappings: false
      #      @Entity, @Table ???? ?? ??? ??? ?? ??
      hibernate.implicit_naming_strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
      hibernate.physical_naming_strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
      #      true -> SQL?? ???? ???(SQL Injection ???)
      hibernate.globally_quoted_identifiers: true
      #      column, table ?? ?? DB keyword ??? ? ?? ????? quote ???
      hibernate.globally_quoted_identifiers_skip_column_definitions: true
      #      ??? ???? ???, ????? ???? ?? ??? IN?? ??? ????? ??
      hibernate.hibernate.default_batch_fetch_size: 1000
      org:
        hibernate:
          envers:
            revision_field_name: rev_id
            audit_table_suffix: _histories
            store_data_at_delete: true
      generate_ddl: false
      hibernate:
        #        ???? ??? ?? ??? ??
        ddl-auto: validate
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/movie_land
    username: root
    password: 1234